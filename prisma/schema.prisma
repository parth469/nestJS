generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(uuid()) @db.Uuid()
  email     String   @unique
  name      String
  password  String
  phone     String
  createdAt DateTime @default(now()) @db.Timestamp()
  updatedAt DateTime @updatedAt @db.Timestamp()
  isActive  Boolean  @default(true)

  roleId String? @db.Uuid()

  Role Role?  @relation(fields: [roleId], references: [id])
  Logs Logs[]
}

model Role {
  id        String   @id @default(uuid()) @db.Uuid()
  name      String
  createdAt DateTime @default(now()) @db.Timestamp()
  updatedAt DateTime @updatedAt @db.Timestamp()

  Permissions Permission[]
  User        User[]
}

model Permission {
  id         String   @id @default(uuid()) @db.Uuid()
  group      String
  identifier String   @unique
  createdAt  DateTime @default(now()) @db.Timestamp()
  updatedAt  DateTime @updatedAt @db.Timestamp()

  Role Role[]
}

model Logs {
  id        String    @id @default(uuid()) @db.Uuid()
  createdAt DateTime  @default(now()) @db.Timestamp()
  updatedAt DateTime  @updatedAt @db.Timestamp()
  action    String
  message   String
  status    LogStatus

  User   User   @relation(fields: [userId], references: [id])
  userId String @db.Uuid()
}

enum LogStatus {
  SUCCESS
  FAILED
}
